package main

import (
	"flag"
	"fmt"
	"log"
	"net"

	// Need to import directory where go file are that were generated by
	// our protoc command
	"grpc-go-srv/customers"
	"grpc-go-srv/database"
	"grpc-go-srv/routes"

	"google.golang.org/grpc"
)

var (
	port = flag.Int("port", 50051, "The server port")
)

// server is used to implement helloworld.GreeterServer.
// type Server struct {
// 	routes.UnimplementedCustomersServer
// }

func main() {

	db, err := database.ConnectToDB()
	sqlDB, err := db.DB()
	defer sqlDB.Close()

	flag.Parse()
	lis, err := net.Listen("tcp", fmt.Sprintf(":%d", *port))
	if err != nil {
		log.Fatalf("failed to listen: %v", err)
	}
	s := grpc.NewServer()
	routes.RegisterCustomersServer(s, &customers.Server{})
	log.Printf("server listening at %v", lis.Addr())
	if err := s.Serve(lis); err != nil {
		log.Fatalf("failed to serve: %v", err)
	}
}
